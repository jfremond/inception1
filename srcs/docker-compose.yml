# # version: '3.9'

# # services:
# #   nginx:
# #     build: ./requirements/nginx
# #     ports:
# #       - "443:443"
# #     restart: on-failure
# #     networks:
# #       - inception
# #     image: "nginx"
# #     working_dir: /var/www/html

# # networks:
# #   inception:
#     # driver: bridge

# # services:
# #   mariadb:
# #     container_name: mariadb			# Le nom du container, oui vraiment.
# #     networks:
# #       - inception            			# à quel network il appartient
# #     build:
# #       context: ./requirements/mariadb
# #       dockerfile: Dockerfile
# #     env_file: .env                  # le fichier d'environnement pour transmettre les variables
# #     volumes:                        # Voir plus bas
# #       - mariadb:/var/lib/mysql
# #     restart: unless-stopped         # redémarre tant qu'il n'est pas stoppé 
# #     expose:                         # le port à exposer
# #       - "3306"

# #   nginx:
# #     container_name: nginx
# #     volumes:
# #       - wordpress:/var/www/wordpress
# #     networks:
# #       - inception
# #     depends_on:        			 # Nouvelle ligne, indiquant de ne pas démarrer NGINX tant que WordPress n'a pas démarré.
# #       - wordpress
# #     build:
# #       context: ./requirements/nginx
# #       dockerfile: Dockerfile
# #     env_file: .env
# #     ports:
# #       - "443:443" 		# on indique le port qui sera exposé a la machine locale
# #     restart: on-failure 		# Ici nous changeons, le container redémarrera uniquement en cas de crash.

# #   wordpress:
# #     container_name: wordpress
# #     env_file: .env
# #     volumes:
# #       - wordpress:/var/www/wordpress
# #     networks:
# #       - inception
# #     build:
# #       context: ./requirements/wordpress
# #       dockerfile: Dockerfile
# #     depends_on:    					# WordPress démarrera uniquement après MariaDB (sinon il ne pourra pas configurer la base de données...)
# #       - mariadb
# #     restart: on-failure
# #     expose: 
# #       - "9000"

# # volumes:
# #   wordpress:
# #     driver: local # ici nous stockons le volume en local
# #     driver_opts:
# #       type: 'none' 									# aucun type spécifique
# #       o: 'bind'
# #       device: '~/Desktop/wordpress' 		#Ou stocker le dossier sur votre ordinateur en local
# #   mariadb:
# #     driver: local
# #     driver_opts:
# #       type: 'none' 
# #       o: 'bind'										 # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
# #       device: '~/Desktop/mariadb' 		#Ou stocker le dossier sur votre ordinateur en local

# # networks:
# #   inception:
# #     driver: bridge


# version: "3.9"

# services:
# # ------------------- NGNIX DOCKER FILE ------------------- #
#   nginx:
#     depends_on:
#       - wordpress
#     build: ./requirements/nginx
#     ports:
#       - "443:443"
#     restart: always
#     networks:
#       - inception_network
#     image: "inception_nginx"
#     working_dir: /var/www/html
#     volumes:
#       - wp-files:/var/www/html
# # ------------------- WORDPRESS DOCKER FILE ------------------- #
#   wordpress:
#     depends_on:
#       - mariadb
#     image: wordpress
#     env_file:
#      - .env
#     build:
#       context: ./requirements/wordpress
#     ports:
#       - "9000:9000"
#     restart: on-failure
#     working_dir: /var/www/html
#     networks:
#       - inception_network
#     volumes:
#       - wp-files:/var/www/html
# # ------------------- MARIADB DOCKER FILE ------------------- #
#   mariadb:
#     image: "inception_mariadb"
#     env_file:
#       - .env
#     container_name: mariadb
#     restart: always
#     ports:
#       - "3306:3306"
#     build:
#       context: ./requirements/mariadb
#       args:
#         - MYSQL_DATABASE={MYSQL_DATABASE}
#         - MYSQL_ROOT_PASSWORD={MYSQL_ROOT_PASSWORD}
#         - MYSQL_USER={MYSQL_USER}
#         - MYSQL_PASSWORD={MYSQL_PASSWORD}
#     networks:
#       - inception_network
#     volumes:
#       - wp-db:/var/lib/mysql

# networks:
#   inception_network:
#     driver: bridge

# # ------------------- VOLUMES ------------------- #
# volumes:
#   wp-db:
#     driver: local
#     driver_opts:
#       type: none
#       # device: /home/emaugale/data/wp-db
#       device: ~/Desktop/mariadb
#       o: bind

#   wp-files:
#     driver: local
#     driver_opts:
#       type: none
#       device: ~/Desktop/wordpress
#       # device: /home/emaugale/data/wp-files
#       o: bind



version: '3'

services:
  mariadb:
    image: mariadb
    container_name: mariadb
    volumes: 
      - mariadb:/var/lib/mysql
    networks:
      - inception
    build: 
      context: requirements/mariadb
      dockerfile: Dockerfile
    env_file: .env
    restart: on-failure # "on-failure", container will be restarted 
    expose:
      - "3306"



  nginx:           # with TLSv.1.2
    image: nginx
    container_name: nginx # name of the container
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    depends_on:
      - wordpress
    build: 
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443"
    restart: on-failure

  wordpress:
    image: wordpress
    container_name: wordpress
    env_file: .env
    volumes:
    - wordpress:/var/www/wordpress
    networks:
      - inception
    build: 
      context: requirements/wordpress
      dockerfile: Dockerfile
    depends_on:    # wordpress will be started after mariadb
      - mariadb
    restart: on-failure
    expose: 
      - "9000"


## VOLUME CHECK

volumes:
  wordpress:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '~/Desktop/wordpress'
  mariadb:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '~/Desktop/mariadb'



#network part
networks:
    inception:
      driver: bridge
